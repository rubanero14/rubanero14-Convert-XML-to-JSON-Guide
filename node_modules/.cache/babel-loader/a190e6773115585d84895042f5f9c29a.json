{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n      WriterState,\n      XMLAttribute,\n      XMLCData,\n      XMLComment,\n      XMLDTDAttList,\n      XMLDTDElement,\n      XMLDTDEntity,\n      XMLDTDNotation,\n      XMLDeclaration,\n      XMLDocType,\n      XMLDocument,\n      XMLDocumentCB,\n      XMLElement,\n      XMLProcessingInstruction,\n      XMLRaw,\n      XMLStringWriter,\n      XMLStringifier,\n      XMLText,\n      getValue,\n      isFunction,\n      isObject,\n      isPlainObject,\n      ref,\n      hasProp = {}.hasOwnProperty;\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n  NodeType = require('./NodeType');\n  XMLDocument = require('./XMLDocument');\n  XMLElement = require('./XMLElement');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLAttribute = require('./XMLAttribute');\n  XMLStringifier = require('./XMLStringifier');\n  XMLStringWriter = require('./XMLStringWriter');\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = function () {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n\n      this.onDataCallback = onData || function () {};\n\n      this.onEndCallback = onEnd || function () {};\n\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function (node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n\n          this.node(node.name, attributes);\n          break;\n\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n\n      ref2 = node.children;\n\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function () {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function (name, attributes, text) {\n      var ref1;\n\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n\n      this.openCurrent();\n      name = getValue(name);\n\n      if (attributes == null) {\n        attributes = {};\n      }\n\n      attributes = getValue(attributes);\n\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n\n      if (text != null) {\n        this.text(text);\n      }\n\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function (name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function (name, value) {\n      var attName, attValue;\n\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n\n      if (name != null) {\n        name = getValue(name);\n      }\n\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n\n        if (this.options.keepNullAttributes && value == null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function (value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function (target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n\n      if (target != null) {\n        target = getValue(target);\n      }\n\n      if (value != null) {\n        value = getValue(value);\n      }\n\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function (version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function (root, pubID, sysID) {\n      this.openCurrent();\n\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function (name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function () {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function () {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function () {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function (node) {\n      var att, chunk, name, ref1;\n\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n\n        chunk = '';\n\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function (node) {\n      var chunk;\n\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function (chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function () {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function (name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function () {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function (value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function (value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function (target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function (version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function (root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function (value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function (value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function (value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function (target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function () {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function () {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function (name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function (name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function (name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n  }();\n}).call(this);","map":{"version":3,"names":["NodeType","WriterState","XMLAttribute","XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLDocument","XMLDocumentCB","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStringWriter","XMLStringifier","XMLText","getValue","isFunction","isObject","isPlainObject","ref","hasProp","hasOwnProperty","require","module","exports","options","onData","onEnd","writerOptions","name","type","Document","writer","filterOptions","stringify","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","root","prototype","createChildNode","node","att","attName","attributes","child","i","len","ref1","ref2","CData","cdata","value","Comment","comment","Element","attribs","call","Dummy","dummy","Raw","raw","Text","text","ProcessingInstruction","instruction","target","Error","constructor","children","length","up","debugInfo","openCurrent","element","oldValidationFlag","DocType","dtdElement","apply","arguments","Array","isArray","noValidation","attribute","attValue","keepNullAttributes","insTarget","insValue","processingInstruction","declaration","version","encoding","standalone","doctype","pubID","sysID","rootNodeName","attList","elementName","attributeName","attributeType","defaultValueType","defaultValue","dtdAttList","entity","dtdEntity","pEntity","notation","dtdNotation","closeNode","openNode","end","chunk","isOpen","state","OpenTag","indent","endline","InsideTag","CloseTag","isClosed","None","level","ele","nod","txt","dat","com","ins","dec","dtd","e","n","t","d","c","r","a","ent","pent","not"],"sources":["C:/Users/Raj/Desktop/RSS Feed/node_modules/xmlbuilder/lib/XMLDocumentCB.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}