{"ast":null,"code":"import axios from 'axios';\n\nconst xml2js = require('xml2js');\n\nexport default {\n  data() {\n    return {\n      data: '',\n      url: '',\n      pic: '',\n      feeds: '',\n      date: '',\n      isloading: false,\n      isError: false,\n      isButton: false\n    };\n  },\n\n  computed: {\n    loadRSS() {\n      return this.getRssFeeds();\n    }\n\n  },\n  methods: {\n    async getRssFeeds() {\n      this.isError = false;\n      this.isButton = false;\n      this.isloading = true;\n      this.pic = this.url.replace(\"search\", \"www\").replace(\"feeds\", \"www\").split('.com')[0] + `.com/favicon.ico`;\n      console.log(this.pic);\n\n      let payload = () => {\n        return `https://cors-anywhere.herokuapp.com/${this.url}`;\n      };\n\n      this.data = await axios.get(payload()).then(response => {\n        console.log(payload());\n        return xml2js.parseStringPromise(response.data);\n      }).catch(err => {\n        this.isloading = false;\n        this.isError = true;\n        this.isButton = true;\n        return err.message;\n      });\n      this.feeds = this.data.rss.channel[0].item;\n\n      this.date = () => {\n        let Elapsed = new Date(this.feeds[0].pubDate).getTime() / 1000;\n        let Now = Date.now();\n        let seconds = Now - Elapsed / 1000;\n        let minutes = seconds / 60;\n\n        if (seconds > 0 && seconds < 61) {\n          return seconds;\n        }\n\n        if (minutes) return (Now - Elapsed) / 1000;\n      };\n\n      this.isloading = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+DA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAK,GAAIC,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAAe;EACbC,IAAI,GAAE;IACJ,OAAO;MACLA,IAAI,EAAE,EADD;MAELC,GAAG,EAAE,EAFA;MAGLC,GAAG,EAAE,EAHA;MAILC,KAAK,EAAE,EAJF;MAKLC,IAAI,EAAE,EALD;MAMLC,SAAS,EAAE,KANN;MAOLC,OAAO,EAAE,KAPJ;MAQLC,QAAQ,EAAE;IARL,CAAP;EAUD,CAZY;;EAabC,QAAQ,EAAE;IACRC,OAAO,GAAE;MACP,OAAO,KAAKC,WAAL,EAAP;IACF;;EAHQ,CAbG;EAkBbC,OAAO,EAAE;IACP,MAAMD,WAAN,GAAmB;MACjB,KAAKJ,OAAL,GAAe,KAAf;MACA,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKF,SAAL,GAAiB,IAAjB;MACA,KAAKH,GAAL,GAAW,KAAKD,GAAL,CAASW,OAAT,CAAiB,QAAjB,EAA0B,KAA1B,EAAiCA,OAAjC,CAAyC,OAAzC,EAAiD,KAAjD,EAAwDC,KAAxD,CAA8D,MAA9D,EAAsE,CAAtE,IAA0E,kBAArF;MACAC,OAAO,CAACC,GAAR,CAAY,KAAKb,GAAjB;;MAEA,IAAIc,OAAM,GAAI,MAAM;QAClB,OAAQ,uCAAsC,KAAKf,GAAI,EAAvD;MACF,CAFA;;MAIA,KAAKD,IAAL,GAAY,MAAMH,KAAI,CACrBoB,GADiB,CACbD,OAAO,EADM,EAEjBE,IAFiB,CAEXC,QAAD,IAAc;QAClBL,OAAO,CAACC,GAAR,CAAYC,OAAO,EAAnB;QACA,OAAOlB,MAAM,CAACsB,kBAAP,CAA0BD,QAAQ,CAACnB,IAAnC,CAAP;MACD,CALiB,EAMjBqB,KANiB,CAMXC,GAAE,IAAK;QACZ,KAAKjB,SAAL,GAAiB,KAAjB;QACA,KAAKC,OAAL,GAAe,IAAf;QACA,KAAKC,QAAL,GAAgB,IAAhB;QACA,OAAOe,GAAG,CAACC,OAAX;MACD,CAXiB,CAAlB;MAaA,KAAKpB,KAAL,GAAa,KAAKH,IAAL,CAAUwB,GAAV,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,IAAtC;;MACA,KAAKtB,IAAL,GAAY,MAAM;QAChB,IAAIuB,OAAM,GAAI,IAAIC,IAAJ,CAAS,KAAKzB,KAAL,CAAW,CAAX,EAAc0B,OAAvB,EAAgCC,OAAhC,KAA0C,IAAxD;QACA,IAAIC,GAAE,GAAIH,IAAI,CAACI,GAAL,EAAV;QACA,IAAIC,OAAM,GAAKF,GAAE,GAAIJ,OAAM,GAAI,IAA/B;QACA,IAAIO,OAAM,GAAKD,OAAM,GAAI,EAAzB;;QACA,IAAGA,OAAM,GAAI,CAAV,IAAeA,OAAM,GAAI,EAA5B,EAA+B;UAC7B,OAAOA,OAAP;QACF;;QACA,IAAGC,OAAH,EACA,OAAO,CAACH,GAAE,GAAIJ,OAAP,IAAiB,IAAxB;MACD,CAVD;;MAYA,KAAKtB,SAAL,GAAiB,KAAjB;IACD;;EAvCM;AAlBI,CAAf","names":["axios","xml2js","require","data","url","pic","feeds","date","isloading","isError","isButton","computed","loadRSS","getRssFeeds","methods","replace","split","console","log","payload","get","then","response","parseStringPromise","catch","err","message","rss","channel","item","Elapsed","Date","pubDate","getTime","Now","now","seconds","minutes"],"sourceRoot":"","sources":["C:\\Users\\Raj\\Desktop\\RSS Feed\\rss-feed\\src\\components\\RSSFeed.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h1>RSS Feed</h1>\r\n      </div>\r\n      <div class=\"col-12 text-center\">\r\n        <div class=\"d-flex justify-content-center align-items-center\">\r\n            <div class=\"col-md-4 d-flex\">\r\n              <div class=\"input-group\">\r\n                <select @change=\"getRssFeeds\" class=\"form-select\" v-model=\"url\" name=\"feeds\" required>\r\n                    <option disabled value=\"\">Select Feed Sources:</option>\r\n                    <option selected value=\"https://www.investing.com/rss/market_overview_Fundamental.rss\">Investing.com</option>\r\n                    <option value=\"https://www.financeasia.com/rss/latest\">Finance Asia</option>\r\n                    <option value=\"https://tradingeconomics.com/rss/news.aspx\">Trading Economics</option>\r\n                    <option value=\"https://search.cnbc.com/rs/search/combinedcms/view.xml?partnerId=wrss01&id=15839069\">CNBC</option>\r\n                    <option value=\"https://finance.yahoo.com/news/rssindex\">Yahoo Finance</option>\r\n                    <option value=\"http://feeds.marketwatch.com/marketwatch/realtimeheadlines/\">MarketWatch</option>\r\n                    <option value=\"https://www.spglobal.com/spdji/en/rss/rss-details/?rssFeedName=corporate-news\">S&P Dow Jones Indices</option>\r\n                    <option value=\"https://www.nasdaq.com/feed/nasdaq-original/rss.xml\">Nasdaq</option>\r\n                  </select>\r\n                  <div v-if=\"isButton\" class=\"input-group-append\">\r\n                      <button class=\"btn btn-secondary right\" @click=\"getRssFeeds\"><i class=\"bi bi-arrow-clockwise\"></i></button>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <hr class=\"my-3\"/>\r\n      <div class=\"col-12\">\r\n        <div v-if=\"isloading\" class=\"spinner-border text-secondary\" role=\"status\">\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"!isError\">\r\n            <div class=\"mb-2\" :key=\"feed.link\" v-for=\"feed in feeds\">\r\n              <div class=\"card\">\r\n                <div class=\"p-3\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-9 col-md-11 text-start\">\r\n                      <a class=\"title\" :href=\"feed.link.toString()\">\r\n                        <h3 class=\"title text-secondary\">{{ feed.title.toString() }}</h3>\r\n                      </a>\r\n                      <span class=\"d-block text-secondary mb-3\">{{ date() }}</span>\r\n                      <a class=\"btn btn-secondary link\" :href=\"feed.link.toString()\">Read More</a>\r\n                    </div>\r\n                    <div class=\"wrapper col-3 col-md-1 d-flex align-items-center justify-content-center\">\r\n                      <img v-if=\"pic\" :src=\"pic\" onerror=\"this.src='https://rss.com/favicon.ico'\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-danger\" v-else>\r\n            {{ data }}, Try Reloading...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nconst xml2js = require('xml2js');\r\n\r\nexport default {\r\n  data(){\r\n    return {\r\n      data: '',\r\n      url: '',\r\n      pic: '',\r\n      feeds: '',\r\n      date: '',\r\n      isloading: false,\r\n      isError: false,\r\n      isButton: false,\r\n    };\r\n  },\r\n  computed: {\r\n    loadRSS(){\r\n      return this.getRssFeeds();\r\n    }\r\n  },\r\n  methods: {\r\n    async getRssFeeds(){\r\n      this.isError = false;\r\n      this.isButton = false;\r\n      this.isloading = true;\r\n      this.pic = this.url.replace(\"search\",\"www\").replace(\"feeds\",\"www\").split('.com')[0]+`.com/favicon.ico`;\r\n      console.log(this.pic);\r\n\r\n      let payload = () => {\r\n        return `https://cors-anywhere.herokuapp.com/${this.url}`;\r\n      }\r\n      \r\n      this.data = await axios\r\n      .get(payload())\r\n      .then((response) => {\r\n        console.log(payload())\r\n        return xml2js.parseStringPromise(response.data);\r\n      })\r\n      .catch(err => {\r\n        this.isloading = false;\r\n        this.isError = true;\r\n        this.isButton = true;\r\n        return err.message;\r\n      });\r\n\r\n      this.feeds = this.data.rss.channel[0].item;\r\n      this.date = () => {\r\n        let Elapsed = new Date(this.feeds[0].pubDate).getTime()/1000;\r\n        let Now = Date.now();\r\n        let seconds = (Now - Elapsed / 1000);\r\n        let minutes = (seconds / 60)\r\n        if(seconds > 0 && seconds < 61){\r\n          return seconds;\r\n        }\r\n        if(minutes )\r\n        return (Now - Elapsed)/(1000);\r\n      };\r\n\r\n      this.isloading = false;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .right {\r\n    border-radius: 0px 4px 4px 0px;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n\r\n  img {\r\n    margin: 20px auto;\r\n    width: 70px;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  h3.title{\r\n    font-size: 30px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  a.title {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  .wrapper {\r\n    padding: 0 20px 0 0;\r\n  }\r\n\r\n@media only screen and (max-width: 600px) {\r\n  h3.title{\r\n    font-size: 15px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}