{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  \"use strict\";\n\n  var bom,\n      defaults,\n      events,\n      isEmpty,\n      processItem,\n      processors,\n      sax,\n      setImmediate,\n      bind = function (fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n  events = require('events');\n  bom = require('./bom');\n  processors = require('./processors');\n  setImmediate = require('timers').setImmediate;\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function (thing) {\n    return typeof thing === \"object\" && thing != null && Object.keys(thing).length === 0;\n  };\n\n  processItem = function (processors, item, key) {\n    var i, len, process;\n\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n\n    return item;\n  };\n\n  exports.Parser = function (superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n\n      this.options = {};\n      ref = defaults[\"0.2\"];\n\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function () {\n      var chunk, err;\n\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function (obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function () {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n\n      this.saxParser.onerror = function (_this) {\n        return function (error) {\n          _this.saxParser.resume();\n\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      }(this);\n\n      this.saxParser.onend = function (_this) {\n        return function () {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      }(this);\n\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n\n      this.saxParser.onopentag = function (_this) {\n        return function (node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n\n          return stack.push(obj);\n        };\n      }(this);\n\n      this.saxParser.onclosetag = function (_this) {\n        return function () {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n\n          s = stack[stack.length - 1];\n\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n\n          if (_this.options.validator != null) {\n            xpath = \"/\" + function () {\n              var i, len, results;\n              results = [];\n\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n\n              return results;\n            }().concat(nodeName).join(\"/\");\n\n            (function () {\n              var err;\n\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n\n              s[_this.options.childkey].push(objClone);\n\n              delete obj[\"#name\"];\n\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      }(this);\n\n      ontext = function (_this) {\n        return function (text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n\n          if (s) {\n            s[charkey] += text;\n\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n\n              s[_this.options.childkey].push(charChild);\n            }\n\n            return s;\n          }\n        };\n      }(this);\n\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = function (_this) {\n        return function (text) {\n          var s;\n          s = ontext(text);\n\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      }(this);\n    };\n\n    Parser.prototype.parseString = function (str, cb) {\n      var err;\n\n      if (cb != null && typeof cb === \"function\") {\n        this.on(\"end\", function (result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function (err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n\n      try {\n        str = str.toString();\n\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n\n        str = bom.stripBOM(str);\n\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function (str) {\n      return new Promise(function (_this) {\n        return function (resolve, reject) {\n          return _this.parseString(str, function (err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      }(this));\n    };\n\n    return Parser;\n  }(events);\n\n  exports.parseString = function (str, a, b) {\n    var cb, options, parser;\n\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n\n      options = {};\n    }\n\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function (str, a) {\n    var options, parser;\n\n    if (typeof a === 'object') {\n      options = a;\n    }\n\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n}).call(this);","map":{"version":3,"names":["bom","defaults","events","isEmpty","processItem","processors","sax","setImmediate","bind","fn","me","apply","arguments","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","thing","Object","keys","length","item","i","len","process","exports","Parser","superClass","opts","parseStringPromise","parseString","reset","assignOrPush","processAsync","ref","value","options","xmlns","xmlnskey","attrkey","normalizeTags","tagNameProcessors","unshift","normalize","chunk","err","remaining","chunkSize","saxParser","write","close","substr","error1","errThrown","emit","obj","newValue","explicitArray","Array","push","charkey","ontext","stack","removeAllListeners","parser","strict","trim","onerror","_this","error","resume","onend","ended","resultObject","EXPLICIT_CHARKEY","explicitCharkey","onopentag","node","processedKey","ignoreAttrs","attributes","mergeAttrs","attrValueProcessors","attrNameProcessors","name","uri","local","onclosetag","cdata","emptyStr","nodeName","objClone","old","s","xpath","pop","explicitChildren","preserveChildrenOrder","match","replace","valueProcessors","emptyTag","validator","results","concat","join","charsAsChildren","getOwnPropertyNames","childkey","explicitRoot","text","charChild","includeWhiteChars","oncdata","str","cb","on","result","toString","stripBOM","async","Promise","resolve","reject","a","b"],"sources":["C:/Users/Raj/Desktop/RSS Feed/node_modules/xml2js/lib/parser.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}